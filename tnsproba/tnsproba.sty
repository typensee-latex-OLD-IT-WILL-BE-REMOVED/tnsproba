% ---------------------- %
% -- IMPORTS REQUIRED -- %
% ---------------------- %

% F
\RequirePackage{forest}
% N
\RequirePackage{nicematrix}
% S
\RequirePackage{simplekv}
% T
\RequirePackage{tcolorbox}
\RequirePackage{tnscom}
% X
\RequirePackage{xstring}

% TikZ libraries
\usetikzlibrary{fit}
\usetikzlibrary{calc}
\usetikzlibrary{babel}


% ------------- %
% -- GENERAL -- %
% ------------- %

% -- Semantic probability -- %

\newcommand\proba[2][p]{%
    \mathchoice{% * Display style
        #1\mskip-.65\medmuskip\left( #2 \right)%
    }{%           * Text style
        #1\mskip-.65\medmuskip\left( #2 \right)%
    }{%           * Script style
        #1\left( #2 \right)%
    }{%           * Script script style
        #1\left( #2 \right)%
    }
}



% -- Conditional probability -- %

\newcommand\tnsproba@abstract@proba@cond[4]{%
    #1{\proba[#2]{#3 \cap #4}}{\proba[#2]{#4}}%
}


\newcommand\probacond{\@ifstar{\tnsproba@proba@cond@star}{\tnsproba@proba@cond@no@star}}

\newcommand\tnsproba@proba@cond@no@star[3][p]{%
    \proba[#1_{#2}]{#3}%
}

\newcommand\tnsproba@proba@cond@star[3][p]{%
    \proba[#1]{#3 \mid #2}%
}


\newcommand\eprobacond{\@ifstar{\tnsproba@proba@cond@exp@star}{\tnsproba@proba@cond@exp@no@star}}

\newcommand\tnsproba@proba@cond@exp@star[3][p]{%
    \tnsproba@abstract@proba@cond{\frac}{#1}{#3}{#2}
}

\newcommand\tnsproba@proba@cond@exp@no@star[3][p]{%
    \tnsproba@abstract@proba@cond{\dfrac}{#1}{#3}{#2}
}



% -- "Not" event -- %

\newcommand\nevent[1]{%
    \overline{\kern.15ex#1\vphantom{#1^{x}}\kern.15ex}%
}



% -- Expected value - Variance - Standard deviation -- %

\newcommand\expval[2][\mathrm{E}]{%
    \proba[#1]{#2}%
}

\newcommand\var[2][\mathrm{V}]{%
    \proba[#1]{#2}%
}

\newcommand\stddev[2][\sigma]{%
    \proba[#1]{#2}%
}


% ---------------------- %
% -- CALCULATE EXPVAL -- %
% ---------------------- %

\tcbuselibrary{theorems}

% Sources
%	* https://tex.stackexchange.com/a/475291/6880
%	* https://tex.stackexchange.com/a/558343/6880
%	* https://tex.stackexchange.com/a/558185/6880


% -- DECORATIONS -- %

% Public macros allows very specific use for "advanced" users.

\newcommand\frameCells[3]{
	\begin{tikzpicture}[remember picture, overlay]
    \node[rounded corners,
          draw       = #1,
          line width = 1pt,
          fit        = (#2.north west) (#2.north east) 
                       (#3.south west) (#3.south east)] {};
    \end{tikzpicture}
}


\newcommand\frameText[2][blue]{
	\tcboxmath[colframe = #1,
               boxsep   = 1mm, boxrule = 1pt,
               left     = 0mm, right   = 0mm, 
               top      = 0mm, bottom  = 0mm]{#2}
}



% -- EXPECTED VALUE (ALONE) -- %

\setKVdefault[tnsproba@calcexpval@keys]{%
	disp   = table,
    colors = red-blue-orange-green!70!black,
    %
    name  = lastone,
    reuse = @,
    %
    X = X,
    E = E,
    %
    k  = k,
    xk = x,
    pk = p,
    %
    nosigma = false,
    %
    ope = \cdot,
    %
    com = @,
}


\newcommand\tnsproba@frame@cells@nodeco[3]{}
\newcommand\tnsproba@frame@text@nodeco[2][]{#2}


\newif\iftnsproba@expval@show@table
\newif\iftnsproba@expval@show@comment
\newif\iftnsproba@expval@show@exp
\newif\iftnsproba@expval@show@formal
\newif\iftnsproba@expval@show@eval


\ExplSyntaxOn
% Global variables used.
    \seq_new:N \l__tnsproba_colors_seq
    \tl_new:N  \l__tnsproba_actual_color_temp_tl

    \seq_new:N \l__tnsproba_calcexpval_seq
    \seq_new:N \l__tnsproba_subseq_seq
    \tl_new:N  \l__tnsproba_xline_temp_tl
    \tl_new:N  \l__tnsproba_pline_temp_tl

    \int_new:N \l__tnsproba_nbline_int
    \int_new:N \l__tnsproba_numcol_int
    \int_new:N \l__tnsproba_numcol_deco_int
    \int_new:N \l__tnsproba_numcol_decotwo_int

% #1 : line separator
% #2 : cell separator
% #3 : content
    \NewDocumentCommand{\calcexpval}{O{} +m} {
    	% Keys
	    \useKVdefault[tnsproba@calcexpval@keys]%
    	\setKV[tnsproba@calcexpval@keys]{#1}%
		%
		\gdef\tnsproba@disp{\useKV[tnsproba@calcexpval@keys]{disp}}%
		\edef\tnsproba@colors{\useKV[tnsproba@calcexpval@keys]{colors}}% <--- KEEP IT AS AN ARGUMENT!
		%
		\gdef\tnsproba@name{\useKV[tnsproba@calcexpval@keys]{name}}%
		\gdef\tnsproba@reuse{\useKV[tnsproba@calcexpval@keys]{reuse}}%
		%
		\gdef\tnsproba@X{\useKV[tnsproba@calcexpval@keys]{X}}%
		\gdef\tnsproba@E{\useKV[tnsproba@calcexpval@keys]{E}}%
		%
		\gdef\tnsproba@ind{\useKV[tnsproba@calcexpval@keys]{k}}%
		\gdef\tnsproba@xk{\useKV[tnsproba@calcexpval@keys]{xk}}%
		\gdef\tnsproba@pk{\useKV[tnsproba@calcexpval@keys]{pk}}%
		%
		\gdef\tnsproba@ope{\useKV[tnsproba@calcexpval@keys]{ope}}%
		%
		\edef\tnsproba@comment{\useKV[tnsproba@calcexpval@keys]{com}}%
		% Store content fo late use
    	\gdef\tnsproba@calc@expval@last@content{#2}


% What will be shown ?
		\tnsproba@expval@show@tablefalse
        \tnsproba@expval@show@commentfalse
        \tnsproba@expval@show@expfalse
        \tnsproba@expval@show@formalfalse
        \tnsproba@expval@show@evalfalse
    	
	
		\IfEqCase{\tnsproba@disp}{%
    		{table}{
				\tnsproba@expval@show@tabletrue
			}%
    		{none}{}%
    		{all}{
				\tnsproba@expval@show@tabletrue
                \tnsproba@expval@show@commenttrue
                \tnsproba@expval@show@exptrue
                \tnsproba@expval@show@formaltrue
                \tnsproba@expval@show@evaltrue
			}%
    		{exp}{
                \tnsproba@expval@show@exptrue
                \tnsproba@expval@show@formaltrue
                \tnsproba@expval@show@evaltrue
			}%
    		{formal}{
                \tnsproba@expval@show@formaltrue
			}%
    		{eval}{
                \tnsproba@expval@show@evaltrue
			}%
    	}[%
        	\PackageError{tnsproba}%
				{unknown~option~for~disp~of~calcexpval}%
            	{You~can~use~table~(default),~none,~all,~exp,~formal~or~eval.}%
		]


		\ifboolKV[tnsproba@calcexpval@keys]{nosigma}{
			\iftnsproba@expval@show@exp
                \tnsproba@expval@show@formalfalse
			\else
        		\PackageError{tnsproba}%
					{impossible~to~use~nosigma~of~calcexpval~without~explanations~of~the~calculus}%
					{}%
			\fi
		}{}


		\tnsproba_calcexpval:nnnn{\tnsproba@colors}{\\}{&}{#2}
    }


% The internal version of the general purpose macro
	\cs_new_protected:Nn \tnsproba_calcexpval:nnnn {
% #1 (option) : colors
% #2 : line separator
% #3 : cell separator
% #4 : content

% Colors.
		\seq_set_split:NnV \l__tnsproba_colors_seq
                           { - }
                           { #1 }
		
% Split into lines
        \seq_set_split:Nnn \l__tnsproba_calcexpval_seq
                           { #2 }
                           { #4 }
        \int_set:Nn \l__tnsproba_nbline_int
                    { \seq_count:N \l__tnsproba_calcexpval_seq }

% Split each line into cells.
        \seq_pop_left:NN   \l__tnsproba_calcexpval_seq
                           \l__tnsproba_xline_temp_tl
        \seq_set_split:NnV \l__tnsproba_x_seq
                           { #3 }
                           \l__tnsproba_xline_temp_tl
        
        \seq_pop_left:NN   \l__tnsproba_calcexpval_seq
                           \l__tnsproba_pline_temp_tl
        \seq_set_split:NnV \l__tnsproba_p_seq
                           { #3 }
                           \l__tnsproba_pline_temp_tl

% Number of columns (offensive programming)
		\int_set:Nn \l__tnsproba_numcol_int
		            { \seq_count:N \l__tnsproba_x_seq }
		\int_set:Nn \l__tnsproba_numcol_deco_int
		            { 2 }


% The table of values
		\iftnsproba@expval@show@table
			\iftnsproba@expval@show@exp
				\let\decocells\frameCells
    		\else
    			\let\decocells\tnsproba@frame@cells@nodeco
    		\fi


    		\[
    		\setlength\arraycolsep{.75em}
    		\begin{NiceArray}{r*{\l__tnsproba_numcol_int}{|c}}
    			\kern.5em\tnsproba@xk{}\sb{\tnsproba@ind{}}
    				& \l__tnsproba_xline_temp_tl \\
    			\hline
    			\kern.5em\tnsproba@pk{}\sb{\tnsproba@ind{}}
    				& \l__tnsproba_pline_temp_tl
    			\CodeAfter	
    			\int_add:Nn \l__tnsproba_numcol_int {2}
    			\bool_while_do:nn 
    			{ \int_compare_p:nNn { \l__tnsproba_numcol_deco_int } < { \l__tnsproba_numcol_int } }{
    				\seq_pop_left:NN  \l__tnsproba_colors_seq
				                      \l__tnsproba_actual_color_temp_tl
    				\seq_put_right:NV \l__tnsproba_colors_seq
				                      \l__tnsproba_actual_color_temp_tl
    				
    				\decocells%
    					{\l__tnsproba_actual_color_temp_tl}%
    					{1-\int_use:N \l__tnsproba_numcol_deco_int}%
    					{2-\int_use:N \l__tnsproba_numcol_deco_int}
        
        			\int_add:Nn \l__tnsproba_numcol_deco_int {2}
    			}
    		\end{NiceArray}
    		\]
		
			\iftnsproba@expval@show@exp
				\par\medskip
			\fi
		\fi
    

% Comment between the table and the calculus.
		\iftnsproba@expval@show@comment
    		\IfStrEq{\tnsproba@comment}{@}{}{
    			\tnsproba@comment
    			\par\medskip
    		}
		\fi


% Explain the calculus of the expected value.
   		\int_incr:N \l__tnsproba_numcol_deco_int


% Explain the calculus of the expected value - FORMAL PART.
		\iftnsproba@expval@show@formal
			$%
				\iftnsproba@expval@show@exp
					\tnsproba@E{}(\tnsproba@X{}) = 
				\fi
				%
                \sum\limits%
                	\sb{\tnsproba@ind{} = 1}%
        		    ^{\int_use:N \l__tnsproba_numcol_int}%
                \tnsproba@pk{}\sb{\tnsproba@ind{}}%
                \tnsproba@ope{}%
                \tnsproba@xk{}\sb{\tnsproba@ind{}}$

            \iftnsproba@expval@show@eval
				\par\smallskip
            \fi
        \fi


% Explain the calculus of the expected value - EVAL PART.
        \iftnsproba@expval@show@eval
			\iftnsproba@expval@show@table
				\let\decotext\frameText
    		\else
    			\let\decotext\tnsproba@frame@text@nodeco
			\fi

			$%
				\iftnsproba@expval@show@exp
					\tnsproba@E{}(\tnsproba@X{}) = 
				\fi
				%
                 \seq_map_indexed_inline:Nn \l__tnsproba_x_seq {
            		\seq_pop_left:NN \l__tnsproba_p_seq \l__tnsproba_pval_tl
            		\int_if_odd:nTF
        				{ \l__tnsproba_numcol_deco_int }
             			{ % The num. of the col. is odd.
                			\seq_pop_left:NN  \l__tnsproba_colors_seq 
			                                  \l__tnsproba_actual_color_temp_tl
                			\seq_put_right:NV \l__tnsproba_colors_seq 
			                                  \l__tnsproba_actual_color_temp_tl
                	
                			\decotext[\l__tnsproba_actual_color_temp_tl]{%
        						##2%
        						\tnsproba@ope{}%
        						\l__tnsproba_pval_tl%
        					}
        				}{ % The num. of the col. is even.
							##2
							\tnsproba@ope{}%
        					\l__tnsproba_pval_tl
						}
            
        		    \int_compare:nNnT { ##1 } < { \seq_count:N \l__tnsproba_x_seq }
		                              { + }
            		\int_incr:N \l__tnsproba_numcol_deco_int
           		}
                $
        \fi
    } 
\ExplSyntaxOff



\newcommand\justredo{
    \expandafter\calcexpval\expandafter{\tnsproba@calc@expval@last@content}
}


% ----------- %
% -- BASIC -- %
% ----------- %

\useforestlibrary{linguistics}


\forestset{
    declare count = {connections}{1},
    %
    apweight/.style = {
        edge label = {
            node[sloped,
                 above,
                 pos  = .5,
                 fill = white] {$#1$}
        }
    },
    bpweight/.style = {
        edge label = {
            node[sloped,
                 below,
                 pos  = .5,
                 fill = white] {$#1$}
        }
    },
    pweight/.style = {
        edge label={
            node[midway,
                 fill = white] {$#1$}
        }
    },
    apweight*/.style = {},
    bpweight*/.style = {},
    pweight*/.style = {},
}


% Sources
%    * https://stackoverflow.com/a/1873617/4589608
%    * https://tex.stackexchange.com/a/511763/6880 (hide/show the weights)
%    * https://tex.stackexchange.com/questions/554843/tikz-forest-align-pcomment*-contents-added-on-the-right-of-the-final-nodes/554855#554855
%    * Option via <...> comes from "Apprendre à programmer en TeX" of Christian Tellechea

\newbool{tnsproba@probatree@asit}
\newbool{tnsproba@probatree@showall}
\newbool{tnsproba@probatree@hideall}


\def\tnsproba@def@new@token#1#2{\let#1= #2}
\tnsproba@def@new@token\tnsproba@space@token{ }

\def\tnsproba@if@next@tok#1#2#3{% #1=token #2=code vrai #3=code faux
    \let\tnsproba@test@tok= #1% stocke le token � tester
    \def\tnsproba@tok@true@code{#2}
    \def\tnsproba@tok@false@code{#3}% et les codes � ex�cuter
    \def\tnsproba@if@next@tok@BIS{\futurelet\nxttok\tnsproba@if@next@tok@ignore@spaces}%
    \tnsproba@if@next@tok@BIS% l'ex�cuter
}

\def\tnsproba@if@next@tok@spaces@not@tested{% macro "normale" qui ne teste pas les espaces
    \ifx\nxttok\tnsproba@test@tok
        \expandafter\tnsproba@tok@true@code% ex�cuter le code vrai
    \else
        \expandafter\tnsproba@tok@false@code% sinon code faux
    \fi
}

\def\tnsproba@if@next@tok@ignore@spaces{% macro qui ignore les espaces
    \ifx\nxttok\tnsproba@space@token% si le prochain token est un espace
        \def\donext{%
            \afterassignment\tnsproba@if@next@tok@BIS% lire le token d'apr�s
            \let\nxttok= % apr�s avoir absorb� l'espace
        }%
    \else
        \let\donext\tnsproba@if@next@tok@spaces@not@tested% sinon, faire le test "normal"
    \fi
    \donext% faire l'action d�cid�e ci-dessus
}


\newenvironment{probatree}{%
    \startprobatree%
}{}

\def\startprobatree#1\end{\tnsproba@tree#1\relax\end}


\long\def\tnsproba@tree{
    \tnsproba@if@next@tok<% si la macro est suivie d'un crochet
        {\tnsproba@tree@spe@options}% aller � la macro � arguments d�limit�s
        {\tnsproba@tree@spe@options<asit>}% sinon, ajouter l'argument optionnel par d�faut entre crochets
}


\long\def\tnsproba@tree@spe@options<#1>#2\relax{%
% Option choosen
    \IfEqCase{#1}{%
        {asit}{\booltrue{tnsproba@probatree@asit}}
        {hideall}{\booltrue{tnsproba@probatree@hideall}}
        {showall}{\booltrue{tnsproba@probatree@showall}}
    }[%
        \PackageError{tnsproba}{unknown option}%
                               {You can use asit (default), hideall or showall.}%
    ]%
    %
    \ifbool{tnsproba@probatree@hideall}{%
        \forestset{
            pweight/.style={},
            apweight/.style={},
            bpweight/.style={},
        }
    }{}%
    %
    \ifbool{tnsproba@probatree@showall}{%
        \forestset{
            apweight*/.style = {
                edge label = {
                    node[sloped,
                         above, 
                         pos  = .5,
                         fill = white] {$##1$}
                }
            },
            bpweight*/.style = {
                edge label = {
                    node[sloped,
                         below, 
                         pos  = .5,
                         fill = white] {$##1$}
                }
            },
            pweight*/.style = {
                edge label={
                    node[midway,
                         fill = white] {$##1$}
                }
            },
        }
    }{}%
    %
% Into the tree...
    \begin{forest}
        for tree = {%
            math content,
            sn edges,
            grow'  = 0,
            l      = 2.5cm,
            s sep  = 1.2cm,
            anchor = parent
        },
        %
        pframe/.style = {
            tikz = {
                \node[rounded corners, 
                      draw,
                      ##1,
                      fit to     = tree,
                      line width = 1.5pt] {};
            }
        },
        %
% USEFUL - TO KEEP !
%
%        pcomment/.style={
%            tikz+={
%                \node [anchor=mid west, xshift=.4cm] at (.mid -| pcomment coord) {##1};
%            },
%        },
        tikz+={
            \coordinate (ptreecomment coord) at (current bounding box.east);
        },
        #2
    \end{forest}
}


% ------------ %
% -- COMENT -- %
% ------------ %

\setKVdefault[tnsproba@comment@keys]{%
    tcol = black,
    dx   = 0cm,
    dy   = 0cm
}

% #1 : color
%
% #2 : node
% #3 : comment
\newcommand\ptreeComment{\@ifstar{\ptree@comment@star}{\ptree@comment@no@star}}

\newcommand\ptree@comment@no@star[3][]{
    \useKVdefault[tnsproba@comment@keys]%
    \setKV[tnsproba@comment@keys]{#1}%
    \edef\tcol{\useKV[tnsproba@comment@keys]{tcol}}%
    \edef\dx{\useKV[tnsproba@comment@keys]{dx}}%
    \edef\dy{\useKV[tnsproba@comment@keys]{dy}}%
	%
	\node[anchor = mid west,
	      xshift = .5cm + \dx,
	      yshift = \dy]
	at (#2.mid -| ptreecomment coord) {\textcolor{\tcol}{#3}};
}



\newcommand\ptree@comment@star[3][]{
    \useKVdefault[tnsproba@comment@keys]%
    \setKV[tnsproba@comment@keys]{#1}%
    \edef\tcol{\useKV[tnsproba@comment@keys]{tcol}}%
    \edef\dx{\useKV[tnsproba@comment@keys]{dx}}%
    \edef\dy{\useKV[tnsproba@comment@keys]{dy}}%
	%
	\node[anchor = mid west,
	      xshift = .825cm,
	      yshift = 0cm]
	at (#2.mid) {\textcolor{\tcol}{#3}};
}


% ----------------- %
% -- TEXTOFNODES -- %
% ----------------- %

% -- TEXT OF A NODE -- %

% Source
%    * https://tex.stackexchange.com/a/559441/6880

\protected\def\tikz@fig@main#1{%
    \expandafter\gdef\csname labeltextof@\tikz@fig@name\endcsname{#1}%
    \iftikz@node@is@pic%
        \tikz@node@is@picfalse%
        \tikz@subpicture@handle{#1}%
    \else%
        \tikz@@fig@main#1\egroup%
    \fi
}


%   #1 : name of the node

\newcommand\ptreeTextOf[1]{\csname labeltextof@#1\endcsname}



% -- COLORS OF A NODE -- %

\setKVdefault[tnsproba@node@col@keys]{%
    tcol = black,
    bcol = white
}

%   #1 : name of the node
%   #2 : options for the colors (text and/or backgorund}

\newcommand\ptreeNodeColor[2]{
    \useKVdefault[tnsproba@node@col@keys]%
    \setKV[tnsproba@node@col@keys]{#2}%
    \edef\tcol{\useKV[tnsproba@node@col@keys]{tcol}}%
    \edef\bcol{\useKV[tnsproba@node@col@keys]{bcol}}%
    %
    \path (#1.center) node[rounded corners,
                           \tcol,
                           fill = \bcol] {\ptreeTextOf{#1}};
}



% -- NEW TEXT OF A NODE -- %

\setKVdefault[tnsproba@node@new@txt@keys]{%
    tcol = black,
    bcol = white
}

%   #1 : options for the colors (text and/or backgorunds}
%   #2 : name of the node
%   #3 : new text

\newcommand\ptreeNodeNewText[3][tcol=black, bcol=white]{
    \useKVdefault[tnsproba@node@new@txt@keys]%
    \setKV[tnsproba@node@new@txt@keys]{#1}%
    \edef\tcol{\useKV[tnsproba@node@new@txt@keys]{tcol}}%
    \edef\bcol{\useKV[tnsproba@node@new@txt@keys]{bcol}}%
	% Hide the original node.
    \path (#2.center) node[rounded corners,
                           \bcol,
                           fill = \bcol] {\ptreeTextOf{#2}};
  	% Add the new node
	\path (#2.center) node[rounded corners,
	                       \tcol,
	                       fill = \bcol] {#3};
}


% ----------- %
% -- FRAME -- %
% ----------- %

\setKVdefault[tnsproba@frame@keys]{%
    lcol = blue
}


% #1 : color
% #2 : left start corner
% #3 : right up   corner
% #4 : right down corner
\newcommand\ptreeFrame[4][]{%
    \useKVdefault[tnsproba@frame@keys]%
    \setKV[tnsproba@frame@keys]{#1}%
    \edef\lcol{\useKV[tnsproba@frame@keys]{lcol}}%
    %
    \node[rounded corners,
          draw       = \lcol,
          line width = 1.5pt,
          fit        = (#2)(#3)(#4)] {};
}


% ---------------- %
% -- FOCUS EDGE -- %
% ---------------- %

%    #1 : number of the node
%    #2 : the node

\newcommand\tnsproba@ptree@focus@abstract@node[2]{
    \ptreeNodeColor{#2}{tcol = \tnsproba@ptree@focus@text@color,
                        bcol = \tnsproba@ptree@focus@back@color}
    %
	\node[rounded corners,
          draw       = \tnsproba@ptree@focus@line@color,
          line width = 1.5pt,
          inner sep  = 0pt,
          fit        = (#2)(#2)(#2)] {};
}


%    #1 : number of the node
%    #2 : the node

\newcommand\tnsproba@ptree@focus@abstract@node@nostart[2]{
	\ifnum#1=1\else
    	\tnsproba@ptree@focus@abstract@node{#1}{#2}
    \fi
}


%    #1 : node1 | node2 | ...

\newcommand\tnsproba@ptree@focus@abstract@multi@nodes[1]{
% Note
%
%    #1 : macro to apply
%    #2 : multi-args
	\tns@multi@apply@each%
	    {\tnsproba@ptree@focus@abstract@node}%
	    {#1}
}


\newcommand\tnsproba@ptree@focus@abstract@multi@nodes@nostart[1]{
	\tns@multi@apply@each%
	    {\tnsproba@ptree@focus@abstract@node@nostart}%
	    {#1}
}



%    #1 : number of the couple of nodes
%    #2 : start of the edge
%    #3 : end   of the edge

\newcommand\tnsproba@ptree@focus@abstract@edge[3]{
    \draw[\tnsproba@ptree@focus@line@color,
          line cap   = round,
          line width = 1.5pt] 
    	  (#2.parent anchor) -- (#3.child anchor);
}


%    #1 : node1 | node2 | ...

\newcommand\tnsproba@ptree@focus@abstract@multi@edges[1]{
% Note
%
%    #1 : macro to apply
%    #2 : multi-args
	\tns@multi@apply@overlapping@couples%
	    {\tnsproba@ptree@focus@abstract@edge}%
	    {#1}
}


% Options

\newcommand\tnsproba@ptree@do@nothing[1]{}

\newcommand\tnsproba@ptree@focus@line@color{}
\newcommand\tnsproba@ptree@focus@text@color{}
\newcommand\tnsproba@ptree@focus@back@color{}

\setKVdefault[tnsproba@focus@keys]{%
    tcol  = black,
    bcol  = white,
    lcol  = blue,
    frame = nostart
}


%    #1 : options
%
%    #2 : node1 | node2 | ...

\newcommand\ptreeFocus[2][]{
    \useKVdefault[tnsproba@focus@keys]%
    \setKV[tnsproba@focus@keys]{#1}%
    %
    \renewcommand\tnsproba@ptree@focus@line@color{\useKV[tnsproba@focus@keys]{lcol}}%
    \renewcommand\tnsproba@ptree@focus@text@color{\useKV[tnsproba@focus@keys]{tcol}}%
    \renewcommand\tnsproba@ptree@focus@back@color{\useKV[tnsproba@focus@keys]{bcol}}%
    %
    \edef\frame{\useKV[tnsproba@focus@keys]{frame}}%
    %
	\tnsproba@ptree@focus@abstract@multi@edges{#2}
	%
	\IfEqCase{\frame}{%
		{nostart}{\let\tocall\tnsproba@ptree@focus@abstract@multi@nodes@nostart}%
		{start}{\let\tocall\tnsproba@ptree@focus@abstract@multi@nodes}%
		{none}{\let\tocall\tnsproba@ptree@do@nothing}%
	}[%
        \PackageError{tnsproba}{unknown option for frame of ptreeFocus}%
                               {You can use nostart (default), start or none.}%
    ]%
	%
	\tocall{#2}
}


% -------------- %
% -- AUTO NUM -- %
% -------------- %

% -- COMMENTS WITH AUTO NUMBERING -- %

% #1 : color
%
% #2 : node
% #3 : comment
\newcommand\aptreeComment{\@ifstar{\aptree@comment@star}{\aptree@comment@no@star}}

\newcommand\aptree@comment@no@star[3][]{
	\ptree@comment@no@star[#1]{!#2}{#3}
}



\newcommand\aptree@comment@star[3][]{
	\ptree@comment@star[#1]{!#2}{#3}
}



% -- FRAMES WITH AUTO NUMBERING -- %

% #1 : color
% #2 : left start corner
% #3 : right up   corner
% #4 : right down corner
\newcommand\aptreeFrame[4][]{%
    \ptreeFrame[#1]{!#2}{!#3}{!#4}%
}



% -- FOCUS WITH AUTO NUMBERING -- %

%    #1 : number of the node
%    #2 : the node

\newcommand\tnsproba@ptree@focus@auto@abstract@node[2]{
%    \aptreeNodeColor{!#2}{tcol = \tnsproba@ptree@focus@text@color, bcol = \tnsproba@ptree@focus@back@color}
    %
	\node[rounded corners,
          draw       = \tnsproba@ptree@focus@line@color,
          line width = 1.5pt,
          inner sep  = 0pt,
          fit        = (!#2)(!#2)(!#2)] {};
}


%    #1 : number of the node
%    #2 : the node

\newcommand\tnsproba@ptree@focus@auto@abstract@node@nostart[2]{
	\ifnum#1=1\else
    	\tnsproba@ptree@focus@auto@abstract@node{#1}{#2}
    \fi
}


%    #1 : node1 | node2 | ...

\newcommand\tnsproba@ptree@focus@auto@abstract@multi@nodes[1]{
% Note
%
%    #1 : macro to apply
%    #2 : multi-args
	\tns@multi@apply@each%
		{\tnsproba@ptree@focus@auto@abstract@node}%
		{#1}
}


\newcommand\tnsproba@ptree@focus@auto@abstract@multi@nodes@nostart[1]{
	\tns@multi@apply@each%
		{\tnsproba@ptree@focus@auto@abstract@node@nostart}%
		{#1}
}


%    #1 : number of the couple of nodes
%    #2 : start of the edge
%    #3 : end   of the edge

\newcommand\tnsproba@ptree@focus@auto@abstract@edge[3]{
    \draw[\tnsproba@ptree@focus@line@color,
          line cap   = round,
          line width = 1.5pt]
    	  (!#2.parent anchor) -- (!#3.child anchor);
}


%    #1 : node1 | node2 | ...

\newcommand\tnsproba@ptree@focus@auto@abstract@multi@edges[1]{
% Note
%
%    #1 : macro to apply
%    #2 : multi-args
	\tns@multi@apply@overlapping@couples%
		{\tnsproba@ptree@focus@auto@abstract@edge}%
	    {#1}
}


% Options

\setKVdefault[tnsproba@focus@auto@keys]{%
%    tcol  = black,
%    bcol  = white,
    lcol  = blue,
    frame = nostart
}


%    #1 : options
%
%    #2 : node1 | node2 | ...

\newcommand\aptreeFocus[2][]{
    \useKVdefault[tnsproba@focus@auto@keys]%
    \setKV[tnsproba@focus@auto@keys]{#1}%
    %
    \renewcommand\tnsproba@ptree@focus@line@color{\useKV[tnsproba@focus@auto@keys]{lcol}}%
%    \renewcommand\tnsproba@ptree@focus@text@color{\useKV[tnsproba@focus@auto@keys]{tcol}}%
%    \renewcommand\tnsproba@ptree@focus@back@color{\useKV[tnsproba@focus@auto@keys]{bcol}}%
    %
    \edef\frame{\useKV[tnsproba@focus@auto@keys]{frame}}%
    %
	\tnsproba@ptree@focus@auto@abstract@multi@edges{#2}
	%
	\IfEqCase{\frame}{%
		{nostart}{\let\tocall\tnsproba@ptree@focus@auto@abstract@multi@nodes@nostart}%
		{start}{\let\tocall\tnsproba@ptree@focus@auto@abstract@multi@nodes}%
		{none}{\let\tocall\tnsproba@ptree@do@nothing}%
	}[%
        \PackageError{tnsproba}{unknown option for frame of aptreeFocus}%
                               {You can use nostart (default), start or none.}%
    ]%
	%
	\tocall{#2}
}

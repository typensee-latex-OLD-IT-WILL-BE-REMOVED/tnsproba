% == PACKAGES USED == %

\RequirePackage{simplekv}
\RequirePackage{xstring}

\RequirePackage{nicematrix}

\RequirePackage{tikz}
\usetikzlibrary{fit}

\RequirePackage{tcolorbox}


% == DEFINITIONS == %

\tcbuselibrary{theorems}

% Sources
%    * https://tex.stackexchange.com/a/475291/6880
%    * https://tex.stackexchange.com/a/558343/6880
%    * https://tex.stackexchange.com/a/558185/6880
%    * https://groups.google.com/g/fr.comp.text.tex/c/mBwIi9yK6xo


% -- DECORATIONS -- %

% Public macros allows very specific use for "advanced" users.

%    #1 : color
%    #2 : node 1
%    #3 : node 2

\newcommand\frameCells[3]{
    \begin{tikzpicture}[remember picture, overlay]
    \node[rounded corners,
          draw       = #1,
          line width = 1pt,
          fit        = (#2.north west) (#2.north east) 
                       (#3.south west) (#3.south east)] {};
    \end{tikzpicture}
}


%    #1 : color
%    #2 : text

\newcommand\frameText[2][blue]{
    \tcboxmath[colframe = #1,
               boxsep   = 1mm, boxrule = 1pt,
               left     = 0mm, right   = 0mm, 
               top      = 0mm, bottom  = 0mm]{#2}
}



% -- EXPECTED VALUE (ALONE) -- %

\edef\restorecatcode{\catcode\number`\_=\number\catcode`\_\relax}
\catcode`\_11
\def\ifDefaultKVKey[#1]#2{\skv_stripsp{\ifDefaultKVKey_i[#1]}{#2}}
\def\ifDefaultKVKey_i[#1]#2{%
    \begingroup
        \restoreKV[#1]%
        \skv_eearg{\gdef\__defaultkey}{\useKV[#1]{#2}}%
    \endgroup
    \skv_eearg{\def\__currentkey}{\useKV[#1]{#2}}%
    \skv_ifx{\__defaultkey\__currentkey}
}
\restorecatcode 


\setKVdefault[tnsproba@calcexpval@keys@default]{%
    disp   = table,
    colors = red - blue - orange - green!70!black,
    %
    name  = lastone,
    reuse = @,
    %
    E = E,
    X = X,
    %
    k  = k,
    xk = x,
    pk = p,
    %
    nosigma = false,
    %
    ope = \cdot,
    %
    com = @,
}


% Hack : we use @ to know if a key has been used.

\setKVdefault[tnsproba@calcexpval@keys@used]{%
%    disp   = @@@,
%    colors = @@@,
    %
%    name  = @@@,
%    reuse = @@@,
    %
    E = @@@,
    X = @@@,
    %
    k  = @@@,
    xk = @@@,
    pk = @@@,
    %
%    nosigma = @@@,
    %
    ope = @@@,
    %
%    com = @@@,
}


%    #1 : name of the set of keys 
%    #2 : key/val indicated

\newcommand\tnsproba@set@keys[2]{
    \useKVdefault[#1]
    \setKV[#1]{#2}

    \gdef\tnsproba@expval@key@disp{\useKV[#1]{disp}}
    \edef\tnsproba@expval@key@colors{\useKV[#1]{colors}}
                % <--- KEEP IT AS AN ARGUMENT!

    \gdef\tnsproba@expval@key@name{\useKV[#1]{name}}%
    \gdef\tnsproba@expval@key@reuse{\useKV[#1]{reuse}}%

    \gdef\tnsproba@expval@key@X{\useKV[#1]{X}}%
    \gdef\tnsproba@expval@key@E{\useKV[#1]{E}}%

    \gdef\tnsproba@expval@key@k{\useKV[#1]{k}}%
    \gdef\tnsproba@expval@key@xk{\useKV[#1]{xk}}%
    \gdef\tnsproba@expval@key@pk{\useKV[#1]{pk}}%

    \gdef\tnsproba@expval@key@nosigma{\useKV[#1]{nosigma}}%

    \gdef\tnsproba@expval@key@ope{\useKV[#1]{ope}}%

    \edef\tnsproba@expval@key@com{\useKV[#1]{com}}%
}



%    #1 : name of the law

\newcommand\tnsproba@save@keys[1]{
    \expandafter\edef\csname tnsproba@expval@key@#1@disp\endcsname%
        {\tnsproba@expval@key@disp}
    
    \expandafter\edef\csname tnsproba@expval@key@#1@colors\endcsname%
        {\tnsproba@expval@key@colors}
                % <--- KEEP IT AS AN ARGUMENT!

    \expandafter\edef\csname tnsproba@expval@key@#1@name\endcsname%
        {\tnsproba@expval@key@name}%

    \expandafter\edef\csname tnsproba@expval@key@#1@reuse\endcsname%
        {\tnsproba@expval@key@reuse}%

    \expandafter\edef\csname tnsproba@expval@key@#1@X\endcsname%
        {\tnsproba@expval@key@X}%

    \expandafter\edef\csname tnsproba@expval@key@#1@E\endcsname%
        {\tnsproba@expval@key@E}%

    \expandafter\edef\csname tnsproba@expval@key@#1@k\endcsname%
        {\tnsproba@expval@key@k}%

    \expandafter\edef\csname tnsproba@expval@key@#1@xk\endcsname%
        {\tnsproba@expval@key@xk}%

    \expandafter\edef\csname tnsproba@expval@key@#1@pk\endcsname%
        {\tnsproba@expval@key@pk}%

    \expandafter\edef\csname tnsproba@expval@key@#1@nosigma\endcsname%
        {\tnsproba@expval@key@nosigma}%

    \expandafter\edef\csname tnsproba@expval@key@#1@ope\endcsname%
        {\tnsproba@expval@key@ope}%

    \expandafter\edef\csname tnsproba@expval@key@#1@com\endcsname%
        {\tnsproba@expval@key@com}%
}


%    #1 : name of the set of keys 
%    #2 : name of the law
%    #3 : key/val indicated

\newcommand\tnsproba@load@keys[3]{
    \useKVdefault[#1]
    \setKV[#1]{#3}
    
    \ifDefaultKVKey[#1]{E}{
        \expandafter\gdef%
        \expandafter\tnsproba@expval@key@E%
        \expandafter{\csname tnsproba@expval@key@#2@E\endcsname}%
    }{
        \gdef\tnsproba@expval@key@E{\useKV[#1]{E}}%
    }
    
    \ifDefaultKVKey[#1]{X}{
        \expandafter\gdef%
        \expandafter\tnsproba@expval@key@X%
        \expandafter{\csname tnsproba@expval@key@#2@X\endcsname}%
    }{
        \gdef\tnsproba@expval@key@X{\useKV[#1]{X}}%
    }

    \ifDefaultKVKey[#1]{k}{
        \expandafter\gdef%
        \expandafter\tnsproba@expval@key@k%
        \expandafter{\csname tnsproba@expval@key@#2@k\endcsname}%
    }{
        \gdef\tnsproba@expval@key@k{\useKV[#1]{k}}%
    }
    
    \ifDefaultKVKey[#1]{pk}{
        \expandafter\gdef%
        \expandafter\tnsproba@expval@key@pk%
        \expandafter{\csname tnsproba@expval@key@#2@pk\endcsname}%
    }{
        \gdef\tnsproba@expval@key@pk{\useKV[#1]{pk}}%
    }
    
    \ifDefaultKVKey[#1]{xk}{
        \expandafter\gdef%
        \expandafter\tnsproba@expval@key@xk%
        \expandafter{\csname tnsproba@expval@key@#2@xk\endcsname}%
    }{
        \gdef\tnsproba@expval@key@xk{\useKV[#1]{xk}}%
    }
    
    \ifDefaultKVKey[#1]{ope}{
        \expandafter\gdef%
        \expandafter\tnsproba@expval@key@ope%
        \expandafter{\csname tnsproba@expval@key@#2@ope\endcsname}%
    }{
        \gdef\tnsproba@expval@key@ope{\useKV[#1]{ope}}%
    }
}


\newcommand\tnsproba@frame@cells@nodeco[3]{}
\newcommand\tnsproba@frame@text@nodeco[2][]{#2}


\newif\iftnsproba@expval@key@Expval@show@table
\newif\iftnsproba@expval@key@Expval@show@comment
\newif\iftnsproba@expval@key@Expval@show@exp
\newif\iftnsproba@expval@key@Expval@show@formal
\newif\iftnsproba@expval@key@Expval@show@eval


\ExplSyntaxOn
% Global variables used.
    \seq_new:N \l__tnsproba_colors_seq
    \tl_new:N  \l__tnsproba_actual_color_temp_tl

    \seq_new:N \l__tnsproba_calcexpval_seq
    \seq_new:N \l__tnsproba_subseq_seq
    \tl_new:N  \l__tnsproba_xline_temp_tl
    \tl_new:N  \l__tnsproba_pline_temp_tl

    \int_new:N \l__tnsproba_nbline_int
    \int_new:N \l__tnsproba_numcol_int
    \int_new:N \l__tnsproba_numcol_deco_int
    \int_new:N \l__tnsproba_numcol_decotwo_int


%    #1 : color
%    #2 : content

    \NewDocumentCommand{\calcexpval}{O{} +m} {
% Keys with default values if it is needed.
        \tnsproba@set@keys{tnsproba@calcexpval@keys@default}{#1}


% Store content for later use, reuse one or just use this.
        \IfStrEq{\tnsproba@expval@key@reuse}{@}{
            \gdef\tnsproba@calc@expval@this@content{#2}

    % Just use this.
            \IfStrEq{\tnsproba@expval@key@name}{@}{
                \gdef\tnsproba@calc@expval@content@lastone{#2}

    % Store the values for a later use.
            }{
                \expandafter\gdef\csname tnsproba@calc@expval@content@\tnsproba@expval@key@name\endcsname{#2}

                \tnsproba@save@keys{\tnsproba@expval@key@name}
            }

    % Reuse something.
        }{    
            \expandafter\ifcsname tnsproba@calc@expval@content@\tnsproba@expval@key@reuse\endcsname
            \else
                \PackageError{tnsproba}%
                    {unknown~name~for~calcexpval:~\tnsproba@expval@key@reuse}{}%
            \fi

            \expandafter\expandafter\expandafter\gdef%
            \expandafter\expandafter\expandafter\tnsproba@calc@expval@this@content%
            \expandafter\expandafter\expandafter{%
                \csname tnsproba@calc@expval@content@\tnsproba@expval@key@reuse\endcsname%
            }
            
            \tnsproba@load@keys{tnsproba@calcexpval@keys@used}%
                               {\tnsproba@expval@key@reuse}{#1}
        }


% What will be shown ?
        \tnsproba@expval@key@Expval@show@tablefalse
        \tnsproba@expval@key@Expval@show@commentfalse
        \tnsproba@expval@key@Expval@show@expfalse
        \tnsproba@expval@key@Expval@show@formalfalse
        \tnsproba@expval@key@Expval@show@evalfalse
        
    
        \IfEqCase{\tnsproba@expval@key@disp}{%
            {table}{
                \tnsproba@expval@key@Expval@show@tabletrue
            }%
            {none}{}%
            {all}{
                \tnsproba@expval@key@Expval@show@tabletrue
                \tnsproba@expval@key@Expval@show@commenttrue
                \tnsproba@expval@key@Expval@show@exptrue
                \tnsproba@expval@key@Expval@show@formaltrue
                \tnsproba@expval@key@Expval@show@evaltrue
            }%
            {exp}{
                \tnsproba@expval@key@Expval@show@exptrue
                \tnsproba@expval@key@Expval@show@formaltrue
                \tnsproba@expval@key@Expval@show@evaltrue
            }%
            {formal}{
                \tnsproba@expval@key@Expval@show@formaltrue
            }%
            {eval}{
                \tnsproba@expval@key@Expval@show@evaltrue
            }%
        }[%
            \PackageError{tnsproba}%
                {unknown~option~for~disp~of~calcexpval}%
                {You~can~use~table~(default),~none,~all,~exp,~formal~or~eval.}%
        ]


        \IfStrEq{\tnsproba@expval@key@nosigma}{false}{}{
            \iftnsproba@expval@key@Expval@show@exp
                \tnsproba@expval@key@Expval@show@formalfalse
            \else
                \PackageError{tnsproba}%
                    {impossible~to~use~nosigma~of~calcexpval~without~explanations~of~the~calculus}%
                    {}%
            \fi
        }{}


        \tnsproba_calcexpval:nn{\\}{&}
    }


% Internal version for expected value
    \cs_new_protected:Nn \tnsproba_calcexpval:nn {
% #1 : line separator
% #2 : cell separator

% Colors.
        \seq_set_split:NnV \l__tnsproba_colors_seq
                           { - }
                           { \tnsproba@expval@key@colors }
        
% Split into lines
        \seq_set_split:NnV \l__tnsproba_calcexpval_seq
                           { #1 }
                           { \tnsproba@calc@expval@this@content{} }
        \int_set:Nn \l__tnsproba_nbline_int
                    { \seq_count:N \l__tnsproba_calcexpval_seq }

% Split each line into cells.
        \seq_pop_left:NN   \l__tnsproba_calcexpval_seq
                           \l__tnsproba_xline_temp_tl
        \seq_set_split:NnV \l__tnsproba_x_seq
                           { #2 }
                           \l__tnsproba_xline_temp_tl
        
        \seq_pop_left:NN   \l__tnsproba_calcexpval_seq
                           \l__tnsproba_pline_temp_tl
        \seq_set_split:NnV \l__tnsproba_p_seq
                           { #2 }
                           \l__tnsproba_pline_temp_tl

% Number of columns (offensive programming)
        \int_set:Nn \l__tnsproba_numcol_int
                    { \seq_count:N \l__tnsproba_x_seq }
        \int_set:Nn \l__tnsproba_numcol_deco_int
                    { 2 }


% The table of values
        \iftnsproba@expval@key@Expval@show@table
            \iftnsproba@expval@key@Expval@show@exp
                \let\decocells\frameCells
            \else
                \let\decocells\tnsproba@frame@cells@nodeco
            \fi


            \[
            \setlength\arraycolsep{.75em}
            \begin{NiceArray}{r*{\l__tnsproba_numcol_int}{|c}}
                \kern.5em\tnsproba@expval@key@xk{}\sb{\tnsproba@expval@key@k{}}
                    & \l__tnsproba_xline_temp_tl \\
                \hline
                \kern.5em\tnsproba@expval@key@pk{}\sb{\tnsproba@expval@key@k{}}
                    & \l__tnsproba_pline_temp_tl
                \CodeAfter

                \int_add:Nn \l__tnsproba_numcol_int {2}

                \bool_while_do:nn {
                    \int_compare_p:nNn { \l__tnsproba_numcol_deco_int } < { \l__tnsproba_numcol_int }
                }{
                    \seq_pop_left:NN  \l__tnsproba_colors_seq
                                      \l__tnsproba_actual_color_temp_tl
                    \seq_put_right:NV \l__tnsproba_colors_seq
                                      \l__tnsproba_actual_color_temp_tl
                    
                    \decocells%
                        {\l__tnsproba_actual_color_temp_tl}%
                        {1-\int_use:N \l__tnsproba_numcol_deco_int}%
                        {2-\int_use:N \l__tnsproba_numcol_deco_int}
        
                    \int_add:Nn \l__tnsproba_numcol_deco_int {2}
                }
            \end{NiceArray}
            \]
        
            \iftnsproba@expval@key@Expval@show@exp
                \par\medskip
            \fi
        \fi
    

% Comment between the calculus of the expected value.
        \iftnsproba@expval@key@Expval@show@comment
            \IfStrEq{\tnsproba@expval@key@com}{@}{}{
                \tnsproba@expval@key@com
                \par\medskip
            }
        \fi


% Explain the calculus of the expected value.
           \int_incr:N \l__tnsproba_numcol_deco_int


% Explain the calculus of the expected value - FORMAL PART.
        \iftnsproba@expval@key@Expval@show@formal
            $%
                \iftnsproba@expval@key@Expval@show@exp
                    \expval[\tnsproba@expval@key@E{}]{\tnsproba@expval@key@X{}} = 
                \fi
                %
                \sum\limits%
                    \sb{\tnsproba@expval@key@k{} = 1}%
                    ^{\int_use:N \l__tnsproba_numcol_int}%
                \tnsproba@expval@key@pk{}\sb{\tnsproba@expval@key@k{}}%
                \tnsproba@expval@key@ope{}%
                \tnsproba@expval@key@xk{}\sb{\tnsproba@expval@key@k{}}$

            \iftnsproba@expval@key@Expval@show@eval
                \par\smallskip
            \fi
        \fi


% Explain the calculus of the expected value - EVAL PART.
        \iftnsproba@expval@key@Expval@show@eval
            \iftnsproba@expval@key@Expval@show@table
                \let\decotext\frameText
            \else
                \let\decotext\tnsproba@frame@text@nodeco
            \fi

            $%
                \iftnsproba@expval@key@Expval@show@exp
                    \expval[\tnsproba@expval@key@E{}]{\tnsproba@expval@key@X{}} = 
                \fi
                %
                 \seq_map_indexed_inline:Nn \l__tnsproba_x_seq {
                    \seq_pop_left:NN \l__tnsproba_p_seq \l__tnsproba_pval_tl
                    \int_if_odd:nTF
                        { \l__tnsproba_numcol_deco_int }
                         { % The num. of the col. is odd.
                            \seq_pop_left:NN  \l__tnsproba_colors_seq 
                                              \l__tnsproba_actual_color_temp_tl
                            \seq_put_right:NV \l__tnsproba_colors_seq 
                                              \l__tnsproba_actual_color_temp_tl
                    
                            \decotext[\l__tnsproba_actual_color_temp_tl]{%
                                \l__tnsproba_pval_tl%
                                \tnsproba@expval@key@ope{}%
                                ##2%
                            }
                        }{ % The num. of the col. is even.
                            \l__tnsproba_pval_tl
                            \tnsproba@expval@key@ope{}%
                            ##2
                        }
            
                    \int_compare:nNnT { ##1 } < { \seq_count:N \l__tnsproba_x_seq }
                                      { + }
                    \int_incr:N \l__tnsproba_numcol_deco_int
                   }
                $
        \fi
    } 
\ExplSyntaxOff

